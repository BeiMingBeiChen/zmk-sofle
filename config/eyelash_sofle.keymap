#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    Home_Row: Home_Row {
        compatible = "zmk,behavior-hold-tap";
        label = "Home-Row";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        require-prior-idle-ms = <120>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <100>;
    };

    BkSp_DEL: BkSp_DEL {
        compatible = "zmk,behavior-mod-morph";
        label = "BkSp/DEL";
        bindings = <&kp BACKSPACE>, <&kp DELETE>;

        #binding-cells = <0>;
        mods = <(MOD_RSFT|MOD_LSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    L_T: L_T {
        compatible = "zmk,behavior-hold-tap";
        label = "L_T";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        quick-tap-ms = <100>;
        tapping-term-ms = <200>;
    };

    M_T: M_T {
        compatible = "zmk,behavior-hold-tap";
        label = "M_T";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        quick-tap-ms = <100>;
        tapping-term-ms = <200>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mo 2           &none                 &kp GRAVE               &kp CLCK                  &none                 &none               &kp UP_ARROW     &rgb_ug RGB_TOG  &none                  &kp RA(SCROLLLOCK)         &kp PAUSE_BREAK          &kp UNDER                  &mo 3
&trans          &kp Q                 &kp W                   &kp E                     &kp R                 &kp T               &kp DOWN_ARROW   &kp Y            &kp U                  &kp I                      &kp O                    &kp P                      &kp DELETE
&kp ESCAPE      &Home_Row LEFT_ALT A  &Home_Row LEFT_SHIFT S  &Home_Row LEFT_CONTROL D  &Home_Row LEFT_GUI F  &kp G               &kp LEFT_ARROW   &kp H            &Home_Row RIGHT_GUI J  &Home_Row RIGHT_CONTROL K  &Home_Row RIGHT_SHIFT L  &Home_Row RIGHT_ALT COLON  &kp BACKSPACE
&sk LEFT_SHIFT  &kp Z                 &kp X                   &kp C                     &kp V                 &kp B               &kp RIGHT_ARROW  &kp N            &kp M                  &kp COMMA                  &kp DOT                  &kp RS(FSLH)               &sk RIGHT_SHIFT
&kp C_MUTE      &kp LEFT_GUI          &kp LEFT_CONTROL        &mt LEFT_SHIFT LS(TAB)    &L_T 1 SPACE          &mt LEFT_GUI TAB    &kp ENTER        &BkSp_DEL        &L_T 1 RET             &mt RIGHT_SHIFT RS(RET)    &kp RIGHT_CONTROL        &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER 0";
        };

        layer_1 {
            bindings = <
&trans      &trans  &trans                         &trans                           &trans                       &trans          &mmv MOVE_UP     &trans     &trans                          &trans                              &trans                       &kp EQUAL                              &trans
&trans      &trans  &kp NUMBER_7                   &kp NUMBER_8                     &kp NUMBER_9                 &kp NUMBER_0    &mmv MOVE_DOWN   &kp PG_UP  &kp END                         &kp UP                              &kp HOME                     &kp LEFT_BRACKET                       &kp RIGHT_BRACKET
&trans      &trans  &Home_Row LEFT_SHIFT NUMBER_4  &Home_Row LEFT_CONTROL NUMBER_5  &Home_Row LEFT_GUI NUMBER_6  &trans          &mmv MOVE_LEFT   &kp PG_DN  &Home_Row RIGHT_GUI LEFT_ARROW  &Home_Row RIGHT_CONTROL DOWN_ARROW  &Home_Row RIGHT RIGHT_ARROW  &Home_Row RS(RIGHT_ALT) DOUBLE_QUOTES  &trans
&trans      &trans  &kp NUMBER_1                   &kp NUMBER_2                     &kp NUMBER_3                 &trans          &mmv MOVE_RIGHT  &mkp RCLK  &trans                          &kp RS(COMMA)                       &kp RS(DOT)                  &kp SLASH                              &trans
&kp C_MUTE  &trans  &trans                         &trans                           &trans                       &trans          &mkp LCLK        &trans     &trans                          &trans                              &trans                       &trans
            >;

            display-name = "layer 1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_UP     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_DOWN   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp LCLK        &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans  &out OUT_BLE  &trans        &trans        &bt BT_CLR_ALL  &bt BT_CLR      &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &trans
&trans  &out OUT_USB  &trans        &trans        &trans          &trans          &trans  &rgb_ug RGB_EFF  &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &trans
&trans  &trans        &trans        &bootloader   &soft_off       &sys_reset      &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans  &trans        &trans        &trans        &trans          &trans          &trans  &trans           &trans           &trans           &trans           &trans
            >;
        };
    };
};
