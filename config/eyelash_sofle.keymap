#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    TD0: TD0 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD0";
        #binding-cells = <0>;
        bindings = <&mt LEFT_GUI F>;
    };

    TD1: TD1 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD1";
        #binding-cells = <0>;
        bindings = <&mt LEFT_CONTROL D>;
    };

    TD2: TD2 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD2";
        #binding-cells = <0>;
        bindings = <&mt LEFT_SHIFT S>;
    };

    TD3: TD3 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD3";
        #binding-cells = <0>;
        bindings = <&mt LEFT_ALT A>;
    };

    TD4: TD4 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD4";
        #binding-cells = <0>;
        bindings = <&mt RIGHT_GUI J>;
    };

    TD5: TD5 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD5";
        #binding-cells = <0>;
        bindings = <&mt RIGHT_CONTROL K>;
    };

    TD6: TD6 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD6";
        #binding-cells = <0>;
        bindings = <&mt RIGHT_SHIFT L>;
    };

    TD7: TD7 {
        compatible = "zmk,behavior-tap-dance";
        label = "TD7";
        #binding-cells = <0>;
        bindings = <&mt RIGHT_ALT COLON>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mo 2       &none         &kp GRAVE         &kp CLCK                &none        &none               &kp UP_ARROW     &rgb_ug RGB_TOG  &none      &kp RA(SCROLLLOCK)       &kp PAUSE_BREAK    &kp UNDER      &mo 3
&trans      &kp Q         &kp W             &kp E                   &kp R        &kp T               &kp DOWN_ARROW   &kp Y            &kp U      &kp I                    &kp O              &kp P          &kp DELETE
&kp ESCAPE  &kp A         &kp S             &kp D                   &kp F        &kp G               &kp LEFT_ARROW   &kp H            &kp J      &kp K                    &kp L              &kp COLON      &kp BACKSPACE
&none       &kp Z         &kp X             &kp C                   &kp V        &kp B               &kp RIGHT_ARROW  &kp N            &kp M      &kp COMMA                &kp DOT            &kp RS(FSLH)   &none
&kp C_MUTE  &kp LEFT_GUI  &kp LEFT_CONTROL  &mt LEFT_SHIFT LS(TAB)  &lt 1 SPACE  &mt LEFT_GUI TAB    &kp ENTER        &none            &lt 1 RET  &mt RIGHT_SHIFT RS(RET)  &kp RIGHT_CONTROL  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &kp NUMBER_6  &kp NUMBER_7  &kp N8        &kp NUMBER_9      &kp NUMBER_0         &mmv MOVE_UP     &trans     &trans    &trans         &trans       &kp EQUAL     &trans
&trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5         &mmv MOVE_DOWN   &kp PG_UP  &kp END   &kp UP         &kp HOME     &trans        &trans
&trans      &none         &none         &none         &none             &trans               &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT  &kp DOWN       &kp RIGHT    &kp RS(APOS)  &trans
&trans      &trans        &trans        &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &mmv MOVE_RIGHT  &mkp RCLK  &trans    &kp RS(COMMA)  &kp RS(DOT)  &kp SLASH     &trans
&kp C_MUTE  &trans        &trans        &trans        &trans            &trans               &mkp LCLK        &trans     &trans    &trans         &trans       &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &trans      &trans  &trans       &trans  &trans    &mmv MOVE_UP     &trans  &trans  &trans      &trans     &trans       &trans
&trans  &trans      &trans  &trans       &trans  &trans    &mmv MOVE_DOWN   &trans  &trans  &trans      &trans     &kp UNDER    &kp PLUS
&trans  &trans      &trans  &trans       &trans  &trans    &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans  &sys_reset  &trans  &bootloader  &trans  &trans    &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans  &trans      &trans  &trans       &trans  &trans    &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans  &out OUT_BLE  &trans        &trans        &bt BT_CLR_ALL  &bt BT_CLR      &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &trans
&trans  &out OUT_USB  &trans        &trans        &trans          &trans          &trans  &rgb_ug RGB_EFF  &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &trans
&trans  &trans        &trans        &bootloader   &sys_reset      &soft_off       &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans  &trans        &trans        &trans        &trans          &trans          &trans  &trans           &trans           &trans           &trans           &trans
            >;
        };
    };
};
